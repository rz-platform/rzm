# Number of database connections
# See https://github.com/brettwooldridge/HikariCP/wiki/About-Pool-Sizing

fixedConnectionPool = 9


play {
  modules {
    enabled += "play.api.db.DBModule"
    enabled += "play.api.db.HikariCPModule"
  }

  # Database configuration
  db {
    # The name of the configuration item from which to read database config.
    # So, if set to db, means that db.default is where the configuration for the
    # database named default is found.
    config = "db"

    # The name of the default database, used when no database name is explicitly
    # specified.
    default = "default"

    # The default connection pool.
    # Valid values are:
    #  - default - Use the default connection pool provided by the platform (HikariCP)
    #  - hikaricp - Use HikariCP
    #  - A FQCN to a class that implements play.api.db.ConnectionPool
    pool = "default"
  }


  server {
    # The root directory for the Play server instance. This value can
    # be set by providing a path as the first argument to the Play server
    # launcher script. See `ServerConfig.loadConfiguration`.
    dir = ${?user.dir}

    git {
      path = ${?user.dir}/.razam
      path = ${?GIT_PATH}
      path = ${?git.path}
    }

    media {
      max_size_bytes: 500000
    }

    # HTTP configuration
    http {
      # The HTTP port of the server. Use a value of "disabled" if the server
      # shouldn't bind an HTTP port.
      port = 9000
      port = ${?PLAY_HTTP_PORT}
      port = ${?http.port}

      # The interface address to bind to.
      address = "0.0.0.0"
      address = ${?PLAY_HTTP_ADDRESS}
      address = ${?http.address}

      # The idle timeout for an open connection after which it will be closed
      # Set to null or "infinite" to disable the timeout, but notice that this
      # is not encouraged since timeout are important mechanisms to protect your
      # servers from malicious attacks or programming mistakes.
      idleTimeout = 75 seconds

      parser {
        # Sets the maximum file size that can be uploaded to 1024k.
        # https://www.playframework.com/documentation/2.7.x/ScalaBodyParsers#Max-content-length
        maxMemoryBuffer = 1024k

        # For upload large file
        # https://www.playframework.com/documentation/2.7.x/ScalaBodyParsers#Max-content-length
        maxDiskBuffer = 1g
      }
    }

    db {
      prototype {
        hikaricp.minimumIdle = ${fixedConnectionPool}
        hikaricp.maximumPoolSize = ${fixedConnectionPool}
      }
    }

    # HTTPS configuration
    https {
      # The HTTPS port of the server.
      port = ${?PLAY_HTTPS_PORT}
      port = ${?https.port}

      # The interface address to bind to
      address = "0.0.0.0"
      address = ${?PLAY_HTTPS_ADDRESS}
      address = ${?https.address}

      # The idle timeout for an open connection after which it will be closed
      # Set to null or "infinite" to disable the timeout, but notice that this
      # is not encouraged since timeout are important mechanisms to protect your
      # servers from malicious attacks or programming mistakes.
      idleTimeout = ${play.server.http.idleTimeout}

      # The SSL engine provider
      engineProvider = "play.core.server.ssl.DefaultSSLEngineProvider"
      engineProvider = ${?play.http.sslengineprovider}

      # The path to the process id file created by the server when it runs.
      # If set to "/dev/null" then no pid file will be created.
      pidfile.path = ${play.server.dir}/RUNNING_PID
      pidfile.path = ${?pidfile.path}

      websocket {
        # Maximum allowable frame payload length. Setting this value to your application's
        # requirement may reduce denial of service attacks using long data frames.
        frame.maxLength = 64k
        frame.maxLength = ${?websocket.frame.maxLength}
      }

      debug {
        # If set to true this will attach an attribute to each request containing debug information. If the application
        # fails to load (e.g. due to a compile issue in dev mode), then this configuration value is ignored and the debug
        # information is always attached.
        #
        # Note: This configuration option is not part of Play's public API and is subject to change without the usual
        # deprecation cycle.
        addDebugInfoToRequests = false
      }

      # The maximum length of the HTTP headers. The most common effect of this is a restriction in cookie length, including
      # number of cookies and size of cookie values.
      max-header-size = 8k

      # If a request contains a Content-Length header it will be checked against this maximum value.
      # If the value of a given Content-Length header exceeds this configured value, the request will not be processed
      # further but instead the error handler will be called with Http status code 413 "Entity too large".
      # If set to infinite or if no Content-Length header exists then no check will take place at all
      # and the request will continue to be processed.
      # Play uses the concept of a `BodyParser` to enforce this limit, so we set it to infinite.
      max-content-length = infinite
    }
  }
}

db.default {
  # Database configuration
  # ~~~~~
  # You can declare as many datasources as you want.
  # By convention, the default datasource is named `default`

  driver = "org.postgresql.Driver"
  url = "jdbc:postgresql://localhost/razam"
  url = ${?DB_URL}
  url = ${?db.url}
  username = "razam"
  username = ${?DB_USERNAME}
  username = ${?db.username}

  password = "razam"
  password = ${?DB_PASSWORD}
  password = ${?db.password}
}

# Job queue sized to HikariCP connection pool
database.dispatcher {
  executor = "thread-pool-executor"
  throughput = 1
  thread-pool-executor {
    fixed-pool-size = ${fixedConnectionPool}
  }
}

play.http.errorHandler = controllers.ErrorHandler
play.http.requestHandler = play.api.http.DefaultHttpRequestHandler
play.filters.enabled += controllers.TrailingSlashFilter